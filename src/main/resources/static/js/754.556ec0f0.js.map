{"version":3,"file":"js/754.556ec0f0.js","mappings":"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","sources":["webpack://board-site-front/./src/components/chat/ChatDetail.vue","webpack://board-site-front/./src/components/chat/ChatDetail.vue?eca8"],"sourcesContent":["<template>\r\n\r\n\r\n<div class=\"container\"> \r\n\r\n<h3 class=\" text-center\">{{chat_room_name}}</h3>\r\n<div class=\"jus-cent-mar\">\r\n<button class=\"btn btn-danger\" style=\"font-size:10px;\" @click=\"roomExitClick\">채팅방 나가기</button>\r\n</div>\r\n<div class=\"messaging\">\r\n  <div class=\"inbox_msg\">\r\n    <div class=\"inbox_people\">\r\n      <div class=\"headind_srch\">\r\n        <div class=\"recent_heading\" style=\"width:100%;\">\r\n          <span style=\"font-size:15px;\">참여 인원: {{person_count}} 명</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"inbox_chat\">\r\n        <div class=\"chat_list\"  v-for=\"(item,index) of room_person_list\" :key=\"index\">\r\n          <div class=\"chat_people\">\r\n            <div class=\"chat_img\" v-if=\"item.img_real\"> <img v-bind:src= \"item.img\" alt=\"sunil\"> </div>\r\n            <!-- <div class=\"chat_img\"> <img src=\"https://bootdey.com/img/Content/avatar/avatar1.png\" alt=\"sunil\"> </div> -->\r\n            <div class=\"chat_ib\">\r\n              <h5>{{item.nickname}}</h5>\r\n            </div>\r\n          </div>\r\n        </div> \r\n\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"mesgs\">\r\n      <div class=\"msg_history\" ref='messages'>\r\n        <div  v-for=\"(item,index) of messageList\" :key=\"index\">\r\n        <div class=\"incoming_msg\" v-if=\"!item.id_chk\">\r\n          <div class=\"incoming_msg_img\" v-if=\"item.img_real\"><img v-bind:src= \"item.img\" alt=\"sunil\"></div>\r\n          <div class=\"received_msg\">\r\n            <span>{{item.nick_name}}</span>\r\n            <div class=\"received_withd_msg\">\r\n              <p>{{item.content}}</p>\r\n              <span class=\"time_date\">{{item.created_time}} | {{item.created_at}}</span></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"outgoing_msg\" v-if=\"item.id_chk\">\r\n          <div class=\"sent_msg\">\r\n            <p>{{item.content}}</p>\r\n            <span class=\"time_date\">{{item.created_time}} | {{item.created_at}}</span> </div>\r\n        </div>\r\n    </div>\r\n      </div>\r\n      <div class=\"type_msg\">\r\n        <div class=\"input_msg_write\">\r\n          <input type=\"text\" class=\"write_msg\" placeholder=\"Type a message\" v-model=\"send_message\"  v-on:keyup.enter=\"send_message_click\" />\r\n          <button class=\"msg_send_btn\" type=\"button\" @click=\"send_message_click\"><i class=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n<div class=\"jus-center\">\r\n<button class=\"btn btn-primary\" @click=\"chatListClick\">목록으로 이동</button>\r\n</div>\r\n<BlackBg v-if=\"loading\"></BlackBg>\r\n</template>\r\n\r\n<script>\r\nimport Stomp from 'webstomp-client'\r\nimport SockJS from 'sockjs-client'\r\nimport BlackBg from \"../loading/BlackBg\"\r\nexport default {\r\n\tdata: function () {\r\n    return {\r\n        messageList: [],\r\n        stompClient:'',\r\n        room_id:this.$route.query.sn,\r\n        loading : false,\r\n        send_message:\"\",\r\n        user_id:\"\",\r\n        chat_room_name:\"\",\r\n        room_person_list: [],\r\n        person_count:\"\",\r\n    }\r\n  },\r\n    components :{\r\n        BlackBg\r\n    },\r\n    created() {\r\n        this.init();\r\n    },  \r\n    methods: {\r\n        init() {\r\n                this.userId();      //사용자 id 조회\r\n                this.roomTitle();   //채팅방 타이틀 조회\r\n                this.roomMessage(); //채팅 내역 조회\r\n                this.roomPersonList(); //채팅방 인원 조회\r\n                this.connect();\r\n        },\r\n        roomTitle() {\r\n              const headers = {\r\n                  'Authorization': 'Bearer ' + sessionStorage.getItem(\"token\")\r\n              }\r\n              this.$axios.get(process.env.VUE_APP_CHAT_ROOM_TITLE+this.room_id).then((res) =>{\r\n                if(res.data.resultCode==\"SUCCESS\"){\r\n                  this.chat_room_name=res.data.result;\r\n                }\r\n              }).catch((error) => {\r\n                  this.$swal('',error.response.data.result,'error');\r\n              }).finally(() => {\r\n              });\r\n      },\r\n      userId(){\r\n          const headers = {\r\n            'Authorization': 'Bearer ' + sessionStorage.getItem(\"token\")\r\n            }\r\n            this.$axios.get(process.env.VUE_APP_CHAT_ROOM_MESSAGE_ID,{headers}).then((res) =>{\r\n                if(res.data.resultCode==\"SUCCESS\"){\r\n                    if(res.data.result!=\"\" || res.data.result!=undefined || res.data.result!=\"undefined\"){\r\n                         this.user_id = res.data.result;\r\n\r\n                    }\r\n                    \r\n                }\r\n            }).catch((error) => {\r\n                this.$swal('',error.response.data.result,'error');\r\n                this.$router.push(\"/\");\r\n            }).finally(() => {\r\n            this.loading = false;\r\n            });\r\n        },\r\n\r\n        roomMessage() {\r\n            const headers = {\r\n            'Authorization': 'Bearer ' + sessionStorage.getItem(\"token\")\r\n            }\r\n            this.loading = true;\r\n             this.$axios.get(process.env.VUE_APP_CHAT_ROOM_MESSAGE+this.room_id,{headers}).then((res) =>{\r\n                if(res.data.resultCode==\"SUCCESS\"){\r\n                    if(res.data.result.length!=0){\r\n                    this.messageList = [] ;\r\n                    res.data.result.forEach(element => {\r\n                        let obj = [];\r\n                        if(element.profileId==null || element.profileId==\"\"){\r\n                          obj.img_real = false;\r\n                        } else {\r\n                          obj.img_real = true;\r\n                        }\r\n                          obj.img = process.env.VUE_APP_FILE_IMAGE_READ+element.profileId+\"/\"+1;\r\n                        obj.id_chk = element.idChk;\r\n                        obj.nick_name = element.nickName;\r\n                        obj.content = element.content;\r\n                        obj.created_time = element.createdAt.substr(11,5);\r\n                        obj.created_at = element.createdAt.substr(5,2)+\".\"+element.createdAt.substr(8,2);\r\n                        this.messageList.push(obj);\r\n                    })\r\n                }\r\n                }\r\n            }).catch((error) => {\r\n                this.$swal('',error.response.data.result,'error');\r\n                this.$router.push(\"/\");\r\n            }).finally(() => {\r\n            this.loading = false;\r\n            });\r\n        },\r\n\r\n        roomPersonList() {\r\n          const headers = {\r\n            'Authorization': 'Bearer ' + sessionStorage.getItem(\"token\")\r\n            }\r\n             this.$axios.get(process.env.VUE_APP_CHAT_ROOM_PERSON+this.room_id,{headers}).then((res) =>{\r\n                if(res.data.resultCode==\"SUCCESS\"){\r\n                    if(res.data.result.length!=0){\r\n                    this.person_count = res.data.result.length;\r\n                    this.room_person_list = [] ;\r\n                    res.data.result.forEach(element => {\r\n                        let obj = [];\r\n                        obj.nickname = element.nickname;\r\n                        obj.id = element.tripUserId;\r\n                        if(element.profileId==null || element.profileId==\"\"){\r\n                          obj.img_real = false;\r\n                        } else {\r\n                          obj.img_real = true;\r\n                        }\r\n                          obj.img = process.env.VUE_APP_FILE_IMAGE_READ+element.profileId+\"/\"+1;\r\n\r\n                        this.room_person_list.push(obj);\r\n                    })\r\n                }\r\n                }\r\n            }).catch((error) => {\r\n                this.$swal('',error.response.data.result,'error');\r\n                this.$router.push(\"/\");\r\n            }).finally(() => {\r\n            this.loading = false;\r\n            });\r\n        },\r\n\r\n        send_message_click() {\r\n            const headers = {\r\n            'Authorization': 'Bearer ' + sessionStorage.getItem(\"token\")\r\n            }\r\n              const msg = {\r\n              chatRoomId :  this.room_id ,\r\n              content    : this.send_message,\r\n              TripUserId : this.user_id\r\n              }\r\n              this.send_message=\"\";\r\n              this.stompClient.send(\"/app/new-Message/\"+this.room_id,JSON.stringify(msg),headers);\r\n        },\r\n\r\n        connect() {\r\n            const headers = {\r\n            'Authorization': 'Bearer ' + sessionStorage.getItem(\"token\")\r\n            }\r\n            const serverURL = \"http://localhost:8081/ws/chat\"\r\n            let socket = new SockJS(serverURL);\r\n            this.stompClient = Stomp.over(socket);\r\n            console.log(`소켓 연결을 시도합니다. 서버 주소: ${serverURL}`)\r\n            this.stompClient.connect(\r\n               headers,\r\n                frame => {\r\n                // 소켓 연결 성공\r\n                this.connected = true;\r\n                console.log('소켓 연결 성공', frame);\r\n                \r\n                this.stompClient.subscribe(\"/topic/new-Message/\"+this.room_id, res => {\r\n                      let chat = JSON.parse(res.body).result;\r\n                      let obj = [];\r\n                      if(this.user_id == chat.userId){\r\n                        obj.id_chk = true;\r\n                      } else {\r\n                        obj.id_chk = false;\r\n                        if(chat.profileId==null || chat.profileId==\"\"){\r\n                          obj.img_real = false;\r\n                        } else {\r\n                          obj.img_real = true;\r\n                          obj.img = process.env.VUE_APP_FILE_IMAGE_READ+chat.profileId+\"/\"+1;\r\n                        }\r\n                      }\r\n                      \r\n                      obj.nick_name = chat.nickName;\r\n                      obj.content = chat.content;\r\n                      obj.created_time = chat.createdAt.substr(11,5);\r\n                      obj.created_at = chat.createdAt.substr(5,2)+\".\"+chat.createdAt.substr(8,2);\r\n                      this.messageList.push(obj);\r\n                });\r\n                this.stompClient.subscribe(\"/topic/room-person/\"+this.room_id, res => {\r\n                  this.roomPersonList();\r\n\r\n                });\r\n\r\n                },\r\n                error => {\r\n                // 소켓 연결 실패\r\n                console.log('소켓 연결 실패', error);\r\n                this.connected = false;\r\n                }\r\n            );        \r\n    },\r\n\r\n    chatListClick() {\r\n      this.$router.push(\"/chatList\");\r\n    },\r\n\r\n    roomExitClick() {\r\n      this.$swal.fire({\r\n                        title: '퇴장 하시겠습니까?',\r\n                        text: '다시 되돌릴 수 없습니다.',\r\n                        icon: 'warning',\r\n                        showCancelButton: true, // cancel버튼 보이기. 기본은 원래 없음\r\n                        confirmButtonColor: '#3085d6', // confrim 버튼 색깔 지정\r\n                        cancelButtonColor: '#d33', // cancel 버튼 색깔 지정\r\n                        confirmButtonText: '확인', // confirm 버튼 텍스트 지정\r\n                        cancelButtonText: '취소', // cancel 버튼 텍스트 지정\r\n                        reverseButtons: true, // 버튼 순서 거꾸로\r\n   \r\n      }).then(result => {\r\n         if (result.isConfirmed) { // 만약 모달창에서 confirm 버튼을 눌렀다면\r\n          const headers = {\r\n            'Authorization': 'Bearer ' + sessionStorage.getItem(\"token\")\r\n        }\r\n         this.$axios.delete(process.env.VUE_APP_CHAT_ROOM_EXIT+ this.room_id ,{headers}).then((res) =>{\r\n              this.$router.push(\"/chatList\");\r\n              this.stompClient.send(\"/app/roomList\",{},headers);\r\n              this.stompClient.send(\"/app/room-person/\"+this.room_id,{},headers);\r\n        }).catch((error) => {\r\n             this.$swal('',error.response.data.result,'error');\r\n             return false;\r\n        }).finally(() => {\r\n        });\r\n          }\r\n      });\r\n\r\n\r\n\r\n\r\n    }\r\n  },\r\n  watch: {\r\n        messages() {\r\n            // 화면에 추가된 후 동작하도록\r\n            this.$nextTick(() => {\r\n                let messages = this.$refs.messages;\r\n\r\n                messages.scrollTo({ top: messages.scrollHeight, behavior: 'smooth' });\r\n            });\r\n        },\r\n    },\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container{max-width:1170px; margin:auto;}\r\nimg{ max-width:100%;}\r\n.inbox_people {\r\n  background: #f8f8f8 none repeat scroll 0 0;\r\n  float: left;\r\n  overflow: hidden;\r\n  width: 40%; border-right:1px solid #c4c4c4;\r\n}\r\n.inbox_msg {\r\n  border: 1px solid #c4c4c4;\r\n  clear: both;\r\n  overflow: hidden;\r\n}\r\n.top_spac{ margin: 20px 0 0;}\r\n\r\n\r\n.recent_heading {float: left; width:40%;}\r\n.srch_bar {\r\n  display: inline-block;\r\n  text-align: right;\r\n  width: 60%; \r\n}\r\n.headind_srch{ padding:10px 29px 10px 20px; overflow:hidden; border-bottom:1px solid #c4c4c4;}\r\n\r\n.recent_heading h4 {\r\n  color: #05728f;\r\n  font-size: 21px;\r\n  margin: auto;\r\n}\r\n.srch_bar input{ border:1px solid #cdcdcd; border-width:0 0 1px 0; width:80%; padding:2px 0 4px 6px; background:none;}\r\n.srch_bar .input-group-addon button {\r\n  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\r\n  border: medium none;\r\n  padding: 0;\r\n  color: #707070;\r\n  font-size: 18px;\r\n}\r\n.srch_bar .input-group-addon { margin: 0 0 0 -27px;}\r\n\r\n.chat_ib h5{ font-size:15px; color:#464646; margin:0 0 8px 0;}\r\n.chat_ib h5 span{ font-size:13px; float:right;}\r\n.chat_ib p{ font-size:14px; color:#989898; margin:auto}\r\n.chat_img {\r\n  float: left;\r\n  width: 11%;\r\n}\r\n.chat_ib {\r\n  float: left;\r\n  padding: 0 0 0 15px;\r\n  width: 88%;\r\n}\r\n\r\n.chat_people{ overflow:hidden; clear:both;}\r\n.chat_list {\r\n  border-bottom: 1px solid #c4c4c4;\r\n  margin: 0;\r\n  padding: 18px 16px 10px;\r\n}\r\n.inbox_chat { height: 550px; overflow-y: scroll;}\r\n\r\n.active_chat{ background:#ebebeb;}\r\n\r\n.incoming_msg_img {\r\n  display: inline-block;\r\n  width: 6%;\r\n}\r\n.received_msg {\r\n  display: inline-block;\r\n  padding: 0 0 0 10px;\r\n  vertical-align: top;\r\n  width: 92%;\r\n }\r\n .received_withd_msg p {\r\n  background: #ebebeb none repeat scroll 0 0;\r\n  border-radius: 3px;\r\n  color: #646464;\r\n  font-size: 14px;\r\n  margin: 0;\r\n  padding: 5px 10px 5px 12px;\r\n  width: 100%;\r\n}\r\n.time_date {\r\n  color: #747474;\r\n  display: block;\r\n  font-size: 12px;\r\n  margin: 8px 0 0;\r\n}\r\n.received_withd_msg { width: 57%;}\r\n.mesgs {\r\n  float: left;\r\n  padding: 30px 15px 0 25px;\r\n  width: 60%;\r\n}\r\n\r\n .sent_msg p {\r\n  background: #05728f none repeat scroll 0 0;\r\n  border-radius: 3px;\r\n  font-size: 14px;\r\n  margin: 0; color:#fff;\r\n  padding: 5px 10px 5px 12px;\r\n  width:100%;\r\n}\r\n.outgoing_msg{ overflow:hidden; margin:26px 0 26px;}\r\n.sent_msg {\r\n  float: right;\r\n  width: 46%;\r\n}\r\n.input_msg_write input {\r\n  background: rgba(0, 0, 0, 0) none repeat scroll 0 0;\r\n  border: medium none;\r\n  color: #4c4c4c;\r\n  font-size: 15px;\r\n  min-height: 48px;\r\n  width: 100%;\r\n}\r\n\r\n.type_msg {border-top: 1px solid #c4c4c4;position: relative;}\r\n.msg_send_btn {\r\n  background: #05728f none repeat scroll 0 0;\r\n  border: medium none;\r\n  border-radius: 50%;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-size: 17px;\r\n  height: 33px;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 11px;\r\n  width: 33px;\r\n}\r\n.messaging { padding: 0 0 50px 0;}\r\n.msg_history {\r\n  height: 516px;\r\n  overflow-y: auto;\r\n}\r\n.jus-center{\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.jus-cent-mar{\r\n  display: flex;\r\n  justify-content: end;\r\n  margin-bottom: 1rem;\r\n}\r\n</style>","import { render } from \"./ChatDetail.vue?vue&type=template&id=0bbf200a&scoped=true\"\nimport script from \"./ChatDetail.vue?vue&type=script&lang=js\"\nexport * from \"./ChatDetail.vue?vue&type=script&lang=js\"\n\nimport \"./ChatDetail.vue?vue&type=style&index=0&id=0bbf200a&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Git_project\\\\board-site\\\\front-end\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-0bbf200a\"]])\n\nexport default __exports__"],"names":["class","style","ref","_createElementVNode","_hoisted_28","_toDisplayString","_ctx","onClick","$options","_createElementBlock","_Fragment","_renderList","item","index","key","img_real","src","img","alt","nickname","id_chk","nick_name","content","created_time","created_at","type","placeholder","$event","onKeyup","_createBlock","_component_BlackBg","data","messageList","stompClient","room_id","this","$route","query","sn","loading","send_message","user_id","chat_room_name","room_person_list","person_count","components","BlackBg","created","init","methods","userId","roomTitle","roomMessage","roomPersonList","connect","sessionStorage","getItem","$axios","get","process","then","res","resultCode","result","catch","error","$swal","response","finally","headers","undefined","$router","push","length","forEach","element","obj","profileId","idChk","nickName","createdAt","substr","id","tripUserId","send_message_click","msg","chatRoomId","TripUserId","send","JSON","stringify","serverURL","socket","SockJS","Stomp","console","log","frame","connected","subscribe","chat","parse","body","chatListClick","roomExitClick","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","reverseButtons","isConfirmed","delete","watch","messages","$nextTick","$refs","scrollTo","top","scrollHeight","behavior","__exports__","render"],"sourceRoot":""}